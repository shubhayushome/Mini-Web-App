/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    scala

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = "com.example"
version = "0.1.0"


dependencies {
    // Use Scala 2.13 in our library project
    implementation(libs.scala.library)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)

    implementation("org.scala-lang:scala-library:2.13.10")
    testImplementation("org.scalatest:scalatest_2.13:3.2.15")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit4 test framework
            useJUnit("4.13.2")

            dependencies {
                // Use Scalatest for testing our library
                implementation(libs.scalatest.v2.v13)
                implementation(libs.junit.v4.v13.v2.v13)

                // Need scala-xml at test runtime
                runtimeOnly(libs.scala.xml.v2.v13)
            }
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}




tasks.test {
    useJUnitPlatform()
    enabled = false
}